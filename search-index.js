var searchIndex = {};
searchIndex['tst'] = {"items":[[0,"","tst","Ternary search trie (TST) container.",null,null],[0,"tst","","TST container map implementation.",null,null],[3,"TST","tst::tst","",null,null],[3,"Iter","","TST iterator.",null,null],[3,"IterMut","","TST mutable iterator.",null,null],[3,"KeysIter","","TST keys iterator",null,null],[3,"ValuesIter","","TST values iterator",null,null],[3,"WildCardIter","","TST wild-card iterator.",null,null],[3,"IntoIter","","TST consuming iterator",null,null],[3,"OccupiedEntry","","A view into a single occupied location in a TST.",null,null],[3,"VacantEntry","","A view into a single empty location in a TST.",null,null],[4,"Entry","","A view into a single location in a TST, which may be vacant or occupied.",null,null],[13,"Occupied","","A vacant Entry",0,null],[13,"Vacant","","An occupied Entry",0,null],[11,"eq","","",1,{"inputs":[{"name":"tst"},{"name":"tst"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"tst"},{"name":"tst"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"tst"}],"output":{"name":"tst"}}],[11,"new","","Constructs a new, empty `TST<V>`.\n# Examples",1,{"inputs":[{"name":"tst"}],"output":{"name":"tst"}}],[11,"len","","Returns the number of elements in the container.",1,{"inputs":[{"name":"tst"}],"output":{"name":"usize"}}],[11,"insert","","Inserts an element at key `key` with value `val`.",1,{"inputs":[{"name":"tst"},{"name":"str"},{"name":"v"}],"output":{"name":"option"}}],[11,"entry","","Gets the given key's corresponding entry in the TST for in-place manipulation.",1,{"inputs":[{"name":"tst"},{"name":"str"}],"output":{"name":"entry"}}],[11,"remove","","Removes a key from the TST, returning the value at the key if the key\nwas previously in the TST.",1,{"inputs":[{"name":"tst"},{"name":"str"}],"output":{"name":"option"}}],[11,"get","","Returns a reference to the value corresponding to the key or None.",1,{"inputs":[{"name":"tst"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",1,{"inputs":[{"name":"tst"},{"name":"str"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the TST contains a value for the specified key.\n# Examples",1,{"inputs":[{"name":"tst"},{"name":"str"}],"output":{"name":"bool"}}],[11,"is_empty","","Returns true if the TST contains no elements.",1,{"inputs":[{"name":"tst"}],"output":{"name":"bool"}}],[11,"clear","","Clears the TST.",1,{"inputs":[{"name":"tst"}],"output":null}],[11,"wildcard_iter","","An iterator returning all nodes matching wildcard pattern.\nIterator element type is (String, V)",1,{"inputs":[{"name":"tst"},{"name":"str"}],"output":{"name":"wildcarditer"}}],[11,"longest_prefix","","Method returns longest prefix in the TST",1,{"inputs":[{"name":"tst"},{"name":"str"}],"output":{"name":"str"}}],[11,"prefix_iter","","Method returns iterator over all values with common prefix in the TST\n# Examples",1,{"inputs":[{"name":"tst"},{"name":"str"}],"output":{"name":"iter"}}],[11,"prefix_iter_mut","","Method returns mutable iterator over all values with common prefix in the TST\n# Examples",1,{"inputs":[{"name":"tst"},{"name":"str"}],"output":{"name":"itermut"}}],[11,"iter","","Gets an iterator over the entries of the TST.",1,{"inputs":[{"name":"tst"}],"output":{"name":"iter"}}],[11,"iter_mut","","Gets a mutable iterator over the entries of the TST.",1,{"inputs":[{"name":"tst"}],"output":{"name":"itermut"}}],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is String",1,{"inputs":[{"name":"tst"}],"output":{"name":"keysiter"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is &V",1,{"inputs":[{"name":"tst"}],"output":{"name":"valuesiter"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the TST in arbitrary order. The TST cannot be used after\ncalling this.",1,{"inputs":[{"name":"tst"}],"output":{"name":"intoiter"}}],[11,"from_iter","","",1,{"inputs":[{"name":"tst"},{"name":"i"}],"output":{"name":"tst"}}],[11,"extend","","",1,{"inputs":[{"name":"tst"},{"name":"i"}],"output":null}],[11,"index","","",1,{"inputs":[{"name":"tst"},{"name":"str"}],"output":{"name":"v"}}],[11,"index_mut","","",1,{"inputs":[{"name":"tst"},{"name":"str"}],"output":{"name":"v"}}],[11,"fmt","","",1,{"inputs":[{"name":"tst"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"default","","",2,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",2,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",2,null],[11,"default","","",3,{"inputs":[{"name":"itermut"}],"output":{"name":"itermut"}}],[11,"next","","",3,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",3,null],[11,"clone","","",4,{"inputs":[{"name":"keysiter"}],"output":{"name":"keysiter"}}],[11,"next","","",4,{"inputs":[{"name":"keysiter"}],"output":{"name":"option"}}],[11,"size_hint","","",4,null],[11,"next","","",5,{"inputs":[{"name":"valuesiter"}],"output":{"name":"option"}}],[11,"size_hint","","",5,null],[11,"clone","","",6,{"inputs":[{"name":"wildcarditer"}],"output":{"name":"wildcarditer"}}],[11,"next","","",6,{"inputs":[{"name":"wildcarditer"}],"output":{"name":"option"}}],[11,"size_hint","","",6,null],[11,"next","","",7,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",7,null],[11,"len","","",7,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"get","","Gets a mut reference to the value in the entry or Err in case for Vacant.",0,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",0,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",0,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",8,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",8,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the tst itself",8,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry's old value",8,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",8,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it",9,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[14,"tstmap!","tst","- Create a `TST` containing a given list of elements:",null,null]],"paths":[[4,"Entry"],[3,"TST"],[3,"Iter"],[3,"IterMut"],[3,"KeysIter"],[3,"ValuesIter"],[3,"WildCardIter"],[3,"IntoIter"],[3,"OccupiedEntry"],[3,"VacantEntry"]]};
initSearch(searchIndex);
