searchState.loadedDescShard("tst", 0, "Ternary search trie (TST) container.\nCreate a <code>TSTMap</code> containing a given list of elements:…\nCreate a <code>TSTSet</code> containing a given list of elements:…\nA view into a single location in a <code>TSTMap</code>, which may be …\n<code>TSTMap</code> consuming iterator\n<code>TSTMap</code> iterator.\n<code>TSTMap</code> mutable iterator.\n<code>TSTMap</code> keys iterator\nA vacant Entry\nA view into a single occupied location in a <code>TSTMap</code>.\nSymbol table with string keys, implemented using a ternary …\nAn occupied Entry\nA view into a single empty location in a <code>TSTMap</code>.\n<code>TSTMap</code> values iterator\n<code>TSTMap</code> wild-card iterator.\n<code>TSTMap</code> wild-card mutable iterator.\nClears the <code>TSTMap</code>.\nReturns true if the <code>TSTMap</code> contains a value for the …\nConstructs a new, empty <code>TSTMap&lt;Value&gt;</code>.\nGets the given <code>key</code>’s corresponding entry in the TSTMap …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a reference to the value in the entry.\nGets a mut reference to the value in the entry or Err in …\nReturns a reference to the value corresponding to the <code>key</code> …\nGets a mutable reference to the value in the entry.\nReturns a mutable reference to the value corresponding to …\nSets the <code>value</code> of the entry, and returns the entry’s old …\nSets the <code>value</code> of the entry with the VacantEntry’s key, …\nInserts an element at key <code>key</code> with value <code>val</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a consuming iterator, that is, one that moves each …\nConverts the OccupiedEntry into a mutable reference to the …\nReturns true if the <code>TSTMap</code> contains no elements.\nGets an iterator over the entries of the TSTMap.\nGets a mutable iterator over the entries of the <code>TSTMap</code>.\nAn iterator visiting all keys in arbitrary order. Iterator …\nReturns the number of elements in the container.\nMethod returns longest prefix <code>pref</code> in the <code>TSTMap</code>.\nConstructs a new, empty <code>TSTMap&lt;Value&gt;</code>.\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nMethod returns iterator over all values with common prefix …\nMethod returns mutable iterator over all values with …\nTakes the value out of the entry, and returns it\nRemoves a <code>key</code> from the TSTMap, returning the value at the …\nAn iterator visiting all values in arbitrary order. …\nAn iterator returning all nodes matching wildcard pattern …\nAn mutable iterator returning all nodes matching wildcard …\nAn owning iterator over a <code>TSTSet</code>’s items.\nAn iterator over a <code>TSTSet</code>’s items.\nA set based on a <code>TSTMap</code>.\n<code>TSTSet</code> wild-card iterator.\nClears the set, removing all values.\nReturns <code>true</code> if the set contains a <code>key</code>.\nMakes a new empty <code>TSTSet</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAdds a value to the set.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a consuming iterator, that is, one that moves each …\nReturns true if the set contains no elements.\nGets an iterator over the TSTSet’s contents.\nReturns the number of elements in the set.\nMethod returns longest prefix in the TSTSet.\nMakes a new empty <code>TSTSet</code>.\nMethod returns iterator over all values with common prefix …\nRemoves a value from the set. Returns <code>true</code> if the value was\nAn iterator returning all nodes matching wildcard pattern. …")